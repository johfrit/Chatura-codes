import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc=new Scanner (System.in);
      int n=sc.nextInt();
      int arr[]=new int[n]; 
      for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
      }
      int target=sc.nextInt();
      System.out.println(function(arr,target));
  }
  static Boolean function(int arr[],int tar){
    
    Arrays.sort(arr);
    int left=0,right=arr.length-1;
    while(left<=right){
      if(arr[left]+arr[right]==tar){
        return true;
      }
      else if(arr[left]+arr[right]<tar){
      left++;
    }
    else{
      right--;
    }
    }
    return false;
  }
}


//hashset approach

import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc=new Scanner (System.in);
      int n=sc.nextInt();
      int arr[]=new int[n];
      for(int i=0;i<n;i++){
        arr[i]=sc.nextInt();
      }
      int target=sc.nextInt();
      System.out.println(function(arr,target));
  }
  static Boolean function(int arr[],int tar){
    
    HashSet<Integer> hs=new HashSet<>();
    for(int i=0;i<arr.length;i++){
      if(hs.contains(tar-arr[i])){
        return true;
      }
      else{
        hs.add(arr[i]);
      }
    }
    return false;
  }
}
